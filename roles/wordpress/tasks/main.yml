---
- name: Install wordpress required software
  apt:
    name: "{{ item }}"
    state: present
    update_cache: 'yes'
    cache_valid_time: 3600
  with_items:
    - mysql-server
    - php7.0-mysql
    - php7.0-fpm
    - php7.0-mcrypt
    - python-mysqldb

- name: Create mysql database
  mysql_db:
    name: "{{r.project}}"
    state: present

- name: Create mysql user
  mysql_user:
    name: wordpress
    password: "{{fampintantana.mysql_password}}"
    priv: '*.*:ALL'

- name: Fix security issue with default php
  lineinfile:
    path: /etc/php/7.0/fpm/php.ini
    regexp: '^;cgi.fix_pathinfo=1'
    line: "cgi.fix_pathinfo=0"
 
- name: Reload php-fpm
  service:
    name: php7.0-fpm
    state: reloaded

- name: Download WordPress
  get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
    validate_certs: 'no'

- name: Ensure existence of project dir
  file:
    path: "{{r.site_root}}"
    state: directory
    mode: 0755

- name: Extract WordPress
  unarchive:
    src: /tmp/wordpress.tar.gz
    dest: "{{r.site_root}}"
    copy: 'no'

- name: Setup configuration
  copy:
    src: "{{r.site_root}}/wordpress/wp-config-sample.php"
    dest: "{{r.site_root}}/wordpress/wp-config.php"
    remote_src: yes

- name: Edit configuration
  tags: xxx
  lineinfile:
    dest: "{{r.site_root}}/wordpress/wp-config.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: "define\\('DB_NAME', '(.)+'\\);"
      line: "define('DB_NAME', '{{r.project}}');"

    - regexp: "define\\('DB_USER', '(.)+'\\);"
      line: "define('DB_USER', 'wordpress');"

    - regexp: "define\\('DB_PASSWORD', '(.)+'\\);"
      line: "define('DB_PASSWORD', '{{fampintantana.mysql_password}}');"

- name: Add HTTPS site configuration
  tags: xxx
  template:
    src: https.conf.j2
    dest: "/etc/nginx/sites-enabled/{{r.server_name}}.https.conf"

- name: Reload nginx
  tags: xxx
  service:
    name: nginx
    state: reloaded
