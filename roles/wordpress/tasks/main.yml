---
- name: Install wordpress required software
  apt:
    name: "{{ item }}"
    state: present
    update_cache: 'yes'
    cache_valid_time: 3600
  with_items:
    - mysql-server
    - php7.0-mysql
    - php7.0-fpm
    - php7.0-gd
    - php7.0-zip
    - php7.0-mcrypt
    - python-mysqldb

- name: Create mysql database
  mysql_db:
    name: "{{r.project}}"
    state: present

- name: Create mysql user
  mysql_user:
    name: "{{r.mysql_user}}"
    password: "{{r.mysql_password}}"
    priv: '*.*:ALL'

- name: Fix security issue with default php
  lineinfile:
    path: /etc/php/7.0/fpm/php.ini
    regexp: 'cgi.fix_pathinfo='
    line: "cgi.fix_pathinfo=0"

- name: Reload php-fpm
  service:
    name: php7.0-fpm
    state: reloaded

- name: Ensure existence of project dir
  tags: deploy
  file:
    path: "{{r.site_root}}/wordpress"
    state: directory
    recurse: 'yes'
    owner: "{{username}}"
    mode: 0755

- name: Sync repository to the application folder (needs SSH forwarding)
  tags: deploy
  become: 'no'
  git:
    repo: "git@github.com:{{r.repository}}"
    version: master
    force: 'yes'
    dest: "{{r.site_root}}/wordpress"
    accept_hostkey: 'yes'

- name: Ensure the whole project folder has correct access rights
  tags: deploy
  file:
    path: "{{r.site_root}}/wordpress"
    recurse: 'yes'
    state: directory
    owner: www-data

- name: Setup configuration
  tags: deploy
  copy:
    src: "{{r.site_root}}/wordpress/wp-config-sample.php"
    dest: "{{r.site_root}}/wordpress/wp-config.php"
    remote_src: 'yes'

- name: Edit configuration
  tags: deploy
  lineinfile:
    dest: "{{r.site_root}}/wordpress/wp-config.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: "define\\('DB_NAME', '(.)+'\\);"
      line: "define('DB_NAME', '{{r.project}}');"

    - regexp: "define\\('DB_USER', '(.)+'\\);"
      line: "define('DB_USER', '{{r.mysql_user}}');"

    - regexp: "define\\('DB_PASSWORD', '(.)+'\\);"
      line: "define('DB_PASSWORD', '{{r.mysql_password}}');"

- name: Add HTTPS site configuration
  tags: nginx
  template:
    src: https.conf.j2
    dest: "/etc/nginx/sites-enabled/{{r.server_name}}.https.conf"

- name: Reload nginx
  tags: nginx
  service:
    name: nginx
    state: reloaded
